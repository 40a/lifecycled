---
AWSTemplateFormatVersion: '2010-09-09'
Description: 'Autoscaling Group with SNS/SQS Notifications'

Parameters:
  KeyName:
    Description: SSH keypair used to access the instances
    Type: AWS::EC2::KeyPair::KeyName
    MinLength: 1

  InstanceType:
    Description: Instance type
    Type: String
    Default: t1.micro
    MinLength: 1

  SpotPrice:
    Description: Spot bid price to use for the instances. 0 means normal (non-spot) instances
    Type: String
    Default: 0

  Count:
    Description: Instance Count
    Type: Number
    Default: 1

  VpcId:
    Type: String
    Description: Id of an existing VPC to launch instances into.

  Subnets:
    Type: CommaDelimitedList
    Description: Comma separated list of two existing VPC subnet ids where EC2 instances will run.

Conditions:
    UseSpotInstances:
      "Fn::Not": [ "Fn::Equals": [ { Ref: SpotPrice }, 0 ] ]

Resources:
  # Allow ec2 instances to assume a role and be granted the IAMPolicies
  IAMInstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Path: /
      Roles: [ !Ref IAMRole ]

  IAMRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service: [ ec2.amazonaws.com ]
            Action: sts:AssumeRole
      Path: /

  IAMPolicies:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: InstancePolicy
      PolicyDocument:
        Statement:
          - Effect: Allow
            Action:
              - autoscaling:DescribeAutoScalingInstances
              - autoscaling:DescribeLifecycleHooks
              - autoscaling:RecordLifecycleActionHeartbeat
              - autoscaling:CompleteLifecycleAction
            Resource: "*"
          - Effect: Allow
            Action:
              - sqs:*
              - sns:Unsubscribe
              - sns:Subscribe
            Resource: "*"
      Roles:
        - !Ref IAMRole

  LaunchConfiguration:
    Type: AWS::AutoScaling::LaunchConfiguration
    Properties:
      AssociatePublicIpAddress: true
      SecurityGroups: [ !Ref SecurityGroup ]
      KeyName : !Ref KeyName
      IamInstanceProfile: !Ref IAMInstanceProfile
      InstanceType: !Ref InstanceType
      ImageId: "ami-abc1ebbd"
      SpotPrice: !If [ "UseSpotInstances", !Ref SpotPrice, !Ref 'AWS::NoValue' ]

  LifecycleTopic:
    Type: AWS::SNS::Topic

  LifecycleHookRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service: [ autoscaling.amazonaws.com ]
            Action: sts:AssumeRole
      Policies:
        - PolicyName: LifecyclePolicy
          PolicyDocument:
            Statement:
              - Effect: Allow
                Action:
                  - sns:Publish
                Resource: !Ref LifecycleTopic
      Path: /

  LifecycleHook:
    Type: AWS::AutoScaling::LifecycleHook
    Properties:
      AutoScalingGroupName: !Ref AutoScaleGroup
      LifecycleTransition: autoscaling:EC2_INSTANCE_TERMINATING
      DefaultResult: CONTINUE
      NotificationTargetARN: !Ref LifecycleTopic
      RoleARN: !GetAtt LifecycleHookRole.Arn

  AutoScaleGroup:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      VPCZoneIdentifier: !Ref Subnets
      LaunchConfigurationName: !Ref LaunchConfiguration
      MinSize: 0
      DesiredCapacity: !Ref Count
      MaxSize: 10

  SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Enable access to SSH
      VpcId: !Ref VpcId
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
